// Generated by json_to_model

#import "Profile.h"
#include "ssr_cipher_names.h"

@implementation Profile  {

}

- (id)initWithJSONDictionary:(NSDictionary *)dictionary {

    self = [super init];
    if (![dictionary isKindOfClass:[NSDictionary class]]) {
        return nil;
    }

    if (self) {
         self.server = (dictionary[@"server"] != [NSNull null]) ? dictionary[@"server"] : nil;

        self.serverPort = (dictionary[@"server_port"] != [NSNull null]) ? [dictionary[@"server_port"] integerValue] : 0;

        self.remarks = (dictionary[@"remarks"] != [NSNull null]) ? dictionary[@"remarks"] : nil;

        self.password = (dictionary[@"password"] != [NSNull null]) ? dictionary[@"password"] : nil;

        self.method = (dictionary[@"method"] != [NSNull null]) ? dictionary[@"method"] : nil;
        
        _protocol = (dictionary[@"protocol"] != [NSNull null]) ? dictionary[@"protocol"] : nil;
        _protocolParam = (dictionary[@"protocolParam"] != [NSNull null]) ? dictionary[@"protocolParam"] : nil;
        _obfs = (dictionary[@"obfs"] != [NSNull null]) ? dictionary[@"obfs"] : nil;
        _obfsParam = (dictionary[@"obfsParam"] != [NSNull null]) ? dictionary[@"obfsParam"] : nil;
    }
    return self;
}

- (id)initWithJSONData:(NSData *)data {
    self = [super init];
    if (self) {
        NSError *error = nil;
        id result = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];
        if (result) {
            self = [self initWithJSONDictionary:result];
        } else {
            return nil;
        }
    }
    return self;
}

- (NSDictionary *)JSONDictionary {

    NSMutableDictionary *dictionary = [[NSMutableDictionary alloc] init];

 
    dictionary[@"server"] = (self.server != nil) ? self.server : [NSNull null];
  
    dictionary[@"server_port"] = @(self.serverPort);
  
    dictionary[@"remarks"] = (self.remarks != nil) ? self.remarks : [NSNull null];
  
    dictionary[@"password"] = (self.password != nil) ? self.password : [NSNull null];
  
    dictionary[@"method"] = (self.method != nil) ? self.method : [NSNull null];
    
    dictionary[@"protocol"] = (_protocol != nil) ? _protocol : [NSNull null];
    dictionary[@"protocolParam"] = (_protocolParam != nil) ? _protocolParam : [NSNull null];
    dictionary[@"obfs"] = (_obfs != nil) ? _obfs : [NSNull null];
    dictionary[@"obfsParam"] = (_obfsParam != nil) ? _obfsParam : [NSNull null];

    return dictionary;
}


- (NSData *)JSONData {
    NSError *error = nil;
    NSData *data = [NSJSONSerialization dataWithJSONObject:[self JSONDictionary] options:0 error:&error];
    if (error) {
        @throw error;
    }
    return data;
}

- (NSString *) method {
    if (_method.length == 0) {
        _method = [NSString stringWithUTF8String:ss_cipher_name_from_index(ss_cipher_aes_256_cfb)];
    }
    return _method;
}

- (NSString *) protocol {
    if (_protocol.length == 0) {
        _protocol = [NSString stringWithUTF8String:ssr_protocol_name_from_index(ssr_protocol_origin)];
    }
    return _protocol;
}

- (NSString *) protocolParam {
    if (_protocolParam == nil) {
        _protocolParam = @"";
    }
    return _protocolParam;
}

- (NSString *) obfs {
    if (_obfs.length == 0) {
        _obfs = [NSString stringWithUTF8String:ssr_obfs_name_from_index(ssr_obfs_plain)];
    }
    return _obfs;
}

- (NSString *) obfsParam {
    if (_obfsParam == nil) {
        _obfsParam = @"";
    }
    return _obfsParam;
}

@end
